It is the redefinition of base class function in its derived class with same signature i.e return type and parameters.
It can only be done in derived class.



// CPP program to illustrate 
// Function Overriding 
#include<iostream> 
using namespace std; 

class BaseClass 
{ 
public: 
	void Display() 
	{ 
		cout << "\nThis is Display() method"
				" of BaseClass"; 
	} 
	void Show() 
	{ 
		cout << "\nThis is Show() method "
			"of BaseClass"; 
	} 
}; 

class DerivedClass : public BaseClass 
{ 
public: 
	// Overriding method - new working of 
	// base class's display method 
	void Display() 
	{ 
		cout << "\nThis is Display() method"
			" of DerivedClass"; 
	} 
}; 

// Driver code 
int main() 
{ 
	DerivedClass dr; 
	BaseClass bs; 
	bs.Display();
	dr.Display();
	dr.Show(); 
	bs.Show();
} 




output:

This is Display() method of BaseClass
This is Display() method of DerivedClass
This is Show() method of BaseClass
This is Show() method of BaseClass
