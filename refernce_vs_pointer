int a = b is setting a's VALUE to b's VALUE
int* a = &b is setting a's VALUE to the ADDRESS of b
int& a = b is setting a's ADDRESS to b's ADDRESS (a is a reference to b) 



                                            https://www.geeksforgeeks.org/passing-by-pointer-vs-passing-by-reference-in-c/


// C++ program to swap two numbers using 
// pass by pointer. 
#include <iostream> 
using namespace std; 

void swap(int* x, int* y) 
{ 
	int z = *x; 
	*x = *y; 
	*y = z; 
} 

int main() 
{ 
	int a = 45, b = 35; 
	cout << "Before Swap\n"; 
	cout << "a = " << a << " b = " << b << "\n"; 

	swap(&a, &b); 

	cout << "After Swap with pass by pointer\n"; 
	cout << "a = " << a << " b = " << b << "\n"; 
} 















// C++ program to swap two numbers using 
// pass by reference. 

#include <iostream> 
using namespace std; 
void swap(int& x, int& y) 
{ 
	int z = x; 
	x = y; 
	y = z; 
} 

int main() 
{ 
	int a = 45, b = 35; 
	cout << "Before Swap\n"; 
	cout << "a = " << a << " b = " << b << "\n"; 

	swap(a, b); 

	cout << "After Swap with pass by reference\n"; 
	cout << "a = " << a << " b = " << b << "\n"; 
} 




















                                        https://www.geeksforgeeks.org/difference-between-call-by-value-and-call-by-reference/


// C program to illustrate 
// Call by Reference 

#include <stdio.h> 

// Function Prototype 
void swapx(int*, int*); 

// Main function 
int main() 
{ 
	int a = 10, b = 20; 

	// Pass reference 
	swapx(&a, &b); 

	printf("a=%d b=%d\n", a, b); 

	return 0; 
} 

// Function to swap two variables 
// by references 
void swapx(int* x, int* y) 
{ 
	int t; 

	t = *x; 
	*x = *y; 
	*y = t; 

	printf("x=%d y=%d\n", *x, *y); 
} 
