default constructor creates shallow copy
copy constructor creates deep copy




MyClass t1, t2; 
MyClass t3 = t1;  // ----> (1) 
t2 = t1;          // -----> (2)  

Copy constructor is called when a new object is created from an existing object, as a copy of the existing object. 
Assignment operator is called when an already initialized object is assigned a new value from another existing object.



1.

#include<iostream> 
#include<cstring> 
using namespace std; 

class String 
{ 
private: 
	char *s; 
	int size; 
public: 
	String(const char *str = NULL); // constructor 
	~String() { delete [] s; }// destructor 
	String(const String&); // copy constructor 
	void print() { cout << s << endl; } // Function to print string 
	void change(const char *); // Function to change 
}; 

String::String(const char *str) 
{ 
	size = strlen(str); 
	s = new char[size+1]; 
	strcpy(s, str); 
} 

void String::change(const char *str) 
{ 
	delete [] s; 
	size = strlen(str); 
	s = new char[size+1]; 
	strcpy(s, str); 
} 

String::String(const String& old_str) 
{ 
	size = old_str.size; 
	s = new char[size+1]; 
	strcpy(s, old_str.s); 
} 

int main() 
{ 
	String str1("GeeksQuiz"); 
	String str2 = str1; 

	str1.print(); // what is printed ? 
	str2.print(); 

	str2.change("GeeksforGeeks"); 

	str1.print(); // what is printed now ? 
	str2.print(); 
	return 0; 
} 












If we remove copy constructor from the above program, we donâ€™t get the expected output. 
The changes made to str2 reflect in str1 as well which is never expected.

2.

#include<iostream> 
#include<cstring> 
using namespace std; 

class String 
{ 
private: 
	char *s; 
	int size; 
public: 
	String(const char *str = NULL); // constructor 
	~String() { delete [] s; }// destructor 
	void print() { cout << s << endl; } 
	void change(const char *); // Function to change 
}; 

String::String(const char *str) 
{ 
	size = strlen(str); 
	s = new char[size+1]; 
	strcpy(s, str); 
} 

void String::change(const char *str) 
{ 
	delete [] s; 
	size = strlen(str); 
	s = new char[size+1]; 
	strcpy(s, str); 
} 

int main() 
{ 
	String str1("GeeksQuiz"); 
	String str2(str1); 

	str1.print(); // what is printed ? 
	str2.print(); 

	str2.change("GeeksforGeeks"); 

	str1.print(); // what is printed now ? 
	str2.print(); 
	return 0; 
} 
